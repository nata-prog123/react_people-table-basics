{"version":3,"sources":["components/Navigation.tsx","components/Loader/Loader.tsx","api.ts","components/Person.tsx","components/PeopleTable.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classnames","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","people","motherNameFound","find","element","name","motherName","fatherNameFound","fatherName","selectedSlug","useParams","slug","sex","born","died","PeopleTable","useState","setIsPeoples","isLoading","setIsLoading","error","setError","getIsPeople","loadePeople","isLoaded","length","useEffect","map","App","role","path","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.df8a816d.chunk.js","sourcesContent":["import classnames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classnames('navbar-item',\n        { 'has-background-grey-lighter': isActive })}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classnames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n  people: Person[];\n}\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  people,\n}) => {\n  const motherNameFound = people.find(\n    element => element.name === person.motherName,\n  );\n  const fatherNameFound = people.find(\n    element => element.name === person.fatherName,\n  );\n\n  const { slug: selectedSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={classnames(\n        { 'has-background-warning': person.slug === selectedSlug },\n      )}\n    >\n      <td>\n        <Link\n          to={`../${person.slug}`}\n          className={classnames(\n            { 'has-text-danger': person.sex === 'f' },\n          )}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {motherNameFound\n          ? (\n            <Link\n              to={`../${motherNameFound.slug}`}\n              className=\"has-text-danger\"\n            >\n              {person.motherName}\n            </Link>\n          )\n          : person.motherName || '-'}\n      </td>\n\n      <td>\n        {fatherNameFound\n          ? (\n            <Link to={`../${fatherNameFound.slug}`} className=\"\">\n              {person.fatherName}\n            </Link>\n          )\n          : person.fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PersonLink } from './Person';\n\nexport const PeopleTable: React.FC = () => {\n  const [people, setIsPeoples] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const getIsPeople = async () => {\n    try {\n      const loadePeople = await getPeople();\n\n      setIsPeoples(() => loadePeople);\n    } catch {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const isLoaded = !isLoading && people.length;\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useEffect(() => {\n    getIsPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n          {isLoaded && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people?.map(element => (\n                  <PersonLink\n                    person={element}\n                    people={people}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!isLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\n\nimport { PageNavLink } from './components/Navigation';\nimport { PeopleTable } from './components/PeopleTable';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"people\">\n            <Route index element={<PeopleTable />} />\n            <Route path=\":slug\" element={<PeopleTable />} />\n          </Route>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}